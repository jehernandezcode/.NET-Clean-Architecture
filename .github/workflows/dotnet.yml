name: CI

on:
  pull_request:
    branches: [main]
  push:
    branches: [main]
  

jobs:
  build:
    name: Build Application
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Setup .NET
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: 8.0.x

      - name: Restore dependencies
        run: dotnet restore

      - name: Build application
        run: dotnet build --configuration Release --no-restore

  test:
    name: Run Tests
    runs-on: ubuntu-latest
    needs: build

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Setup .NET
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: 8.0.x

      - name: Restore dependencies
        run: dotnet restore

      - name: Run tests
        run: dotnet test --collect:"XPlat Code Coverage"

  sonarcloud:
    name: SonarCloud Analysis
    runs-on: ubuntu-latest
    needs: test

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Setup .NET
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: 8.0.x

      - name: Install dotnet coverage
        run: dotnet tool install --global dotnet-coverage

      - name: Run SonarCloud Scan
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        run: |
          dotnet tool install --global dotnet-sonarscanner
          export PATH="$PATH:/home/runner/.dotnet/tools"
          dotnet sonarscanner begin \
            /k:"jehernandezcode_.NET-Clean-Architecture" \
            /o:"jhonnhernandezcode" \
            /d:sonar.token="${{ secrets.SONAR_TOKEN }}" \
            /d:sonar.coverage.exclusions=**/Migrations/**,**/bin/**,**/obj/**,**/Program.cs \
            /d:sonar.exclusions=**/bin/**,**/obj/**,**/*.generated.cs \
            /d:sonar.test.exclusions=**/tests/helpers/** \
            /d:sonar.cs.vscoveragexml.reportsPaths=coverage.xml \
            /d:sonar.cpd.exclusions="**/Migrations/**,**/Generated/**"

          dotnet build --no-incremental
          dotnet-coverage collect "dotnet test" -f xml -o "coverage.xml"
          dotnet sonarscanner end /d:sonar.token="${{ secrets.SONAR_TOKEN }}"
